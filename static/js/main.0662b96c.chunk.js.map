{"version":3,"sources":["сomponents/App/App.module.css","сomponents/Filter/Filter.module.css","сomponents/ContactForm/ContactForm.module.css","сomponents/ContactForm/ContactForm.jsx","сomponents/ContactList/ContactList.jsx","сomponents/Filter/Filter.jsx","сomponents/App/App.js","index.js","сomponents/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form_element","label","htmlFor","type","onChange","id","button","Component","defaultProps","ContactList","contacts","onDeleteContact","map","ContactList_item","onClick","Filter","onChangeFilter","App","filter","deleteContact","contactId","prevState","contact","changeFilter","formSubmitHandler","data","find","alert","newContact","getFilterContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","console","log","setItem","stringify","filterContacts","container","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0662b96c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3A7NX\",\"title\":\"App_title__5s4im\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1rzxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2tr-o\",\"button\":\"ContactForm_button__pBl66\"};","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid'\r\nimport s from './ContactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n    name: \"\",\r\n    number: \"\"\r\n    }\r\n\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n\r\n    handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n    };\r\n    \r\n    handleSubmit = (e) => {\r\n    e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    };\r\n    \r\n    reset = () => {\r\n        this.setState({name: \"\",\r\n    number: \"\"})\r\n    }\r\n    render() {\r\n        return (\r\n            < form onSubmit={this.handleSubmit} >\r\n                <div className={s.form_element}>\r\n                <label className={s.label} htmlFor={this.nameInputId}>\r\n                    Name\r\n              <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                        id={this.nameInputId}\r\n                    />\r\n                </label>\r\n                </div>\r\n                <label className={s.label} htmlFor={this.numberInputId}>\r\n                    Number\r\n              <input\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                        id={this.numberInputId}\r\n                    />\r\n                </label>\r\n                <button className={s.button} type=\"submit\">Add contact</button>\r\n            </form >\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.defaultProps = {\r\n    type: 'text',\r\n    name: null,\r\n};\r\n\r\nContactForm.propTypes = {\r\n    type: PropTypes.string,\r\n    name: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n    <ul className={s.ContactList}>\r\n            {contacts.map(({id,name,number}) =>\r\n                (<li className={s.ContactList_item} key={id}>\r\n                {name}: {number}\r\n                <button className={s.button} onClick={() => onDeleteContact(id)}>Delete</button>\r\n                </li>))}\r\n            </ul >\r\n    \r\n        )\r\n\r\n\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChangeFilter}) => {\r\n  return (\r\n          <label className={s.label} >\r\n            Find contacts by name\r\n            <input\r\n              type=\"text\"\r\n              value={value}\r\n              onChange={onChangeFilter}\r\n            ></input>\r\n      </label>\r\n     )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React, { Component } from \"react\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport shortid from \"shortid\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport s from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  formSubmitHandler = (data) => {\n    const { contacts } = this.state;\n    if (contacts.find(({ name }) => name === data.name)) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n\n  getFilterContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"App componenetDidUpdate\");\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const filterContacts = this.getFilterContacts();\n    const { filter } = this.state;\n    return (\n      <div className={s.container}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n        <ContactList\n          contacts={filterContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./сomponents/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__nHQVF\",\"ContactList_item\":\"ContactList_ContactList_item__37qq9\",\"button\":\"ContactList_button__1tlby\"};"],"sourceRoot":""}